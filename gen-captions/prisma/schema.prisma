// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db"
// }
datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  avatar    String?  // アバター画像のURL
  role      String   @default("user") // "user" または "admin"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // 作品との関連
  arts      Art[]      @relation("UserArts")
  // フィードバックとの関連
  feedbacks Feedback[] @relation("UserFeedback")
}

model Art {
  id                Int     @id @default(autoincrement())
  title             String
  feature           String
  advantage         String
  advice            String
  image             String
  rating            Int
  comment           String
  character         String  @default("")
  is_public_allowed Boolean @default(false)
  createdAt         DateTime @default(now())
  
  // ユーザーとの関連（null許可でゲスト作成も可能）
  userId    String?
  user      User?    @relation("UserArts", fields: [userId], references: [id])
}

model Feedback {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  
  // ユーザーとの関連（ログイン済みの場合）
  userId    String?
  user      User?    @relation("UserFeedback", fields: [userId], references: [id])
}
